pipeline {
    agent any

    tools {
        maven 'Maven 3.8.5'
        jdk 'JDK 11'
    }

    environment {
        ARTIFACTORY_SERVER_ID = 'my-artifactory-server'
    }

    parameters {
        string(name: 'GIT_URL', defaultValue: 'https://github.com/Issak-2005/public-java-repo.git', description: 'Git repository URL')
        string(name: 'GIT_BRANCH', defaultValue: 'add-license-1', description: 'Branch to build')
    }

    stages {
        stage('Clone Repo') {
            steps {
                git branch: "${params.GIT_BRANCH}",
                    credentialsId: 'github-cred-id',
                    url: "${params.GIT_URL}"
            }
        }

        stage('Build & Deploy') {
            steps {
                script {
                    // ✅ Create Artifactory server instance
                    def server = Artifactory.server("${ARTIFACTORY_SERVER_ID}")

                    // ✅ Configure Maven build
                    def rtMaven = Artifactory.newMavenBuild()
                    rtMaven.tool = 'Maven 3.8.5'
                    rtMaven.resolver server: server, releaseRepo: 'my-java-app-libs-release', snapshotRepo: 'my-java-app-libs-snapshot'
                    rtMaven.deployer server: server, releaseRepo: 'my-java-app-libs-release', snapshotRepo: 'my-java-app-libs-snapshot'

                    // ✅ Run Maven build and capture build info
                    def buildInfo = rtMaven.run pom: 'pom.xml', goals: 'clean install deploy'

                    // ✅ Publish build info to Artifactory
                    server.publishBuildInfo buildInfo
                }
            }
        }
    }
}
