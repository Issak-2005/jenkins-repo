pipeline {
    agent any

    tools {
        maven 'Maven 3.8.5'    // This name must match Global Tool Config
        jdk 'JDK 11'           // Must be configured in Global Tool Config
    }

    environment {
        ARTIFACTORY_SERVER_ID = 'jfrog-ids' // ✅ This must be the **Server ID** set in Jenkins → Manage Jenkins → Configure System → Artifactory
    }

    parameters {
        string(name: 'GIT_URL', defaultValue: 'https://github.com/your-org/your-repo.git', description: 'Git repository URL')
        string(name: 'GIT_BRANCH', defaultValue: 'main', description: 'Branch to build')
    }

    stages {
        stage('Clone Repo') {
            steps {
                git branch: "${params.GIT_BRANCH}",
                    credentialsId: 'github-cred-id', // ID from Jenkins credentials manager
                    url: "${params.GIT_URL}"
            }
        }

        stage('Build & Deploy') {
            steps {
                script {
                    def server = Artifactory.server("${ARTIFACTORY_SERVER_ID}") // Artifactory server ID

                    def rtMaven = Artifactory.newMavenBuild()
                    rtMaven.tool = 'Maven 3.8.5'          // Match Global Tool name
                    rtMaven.resolver server: server, releaseRepo: 'my-java-app-libs-release', snapshotRepo: 'my-java-app-libs-snapshot'
                    rtMaven.deployer server: server, releaseRepo: 'my-java-app-libs-release', snapshotRepo: 'my-java-app-libs-snapshot'

                    def buildInfo = rtMaven.run pom: 'pom.xml', goals: 'clean install deploy'
                    server.publishBuildInfo buildInfo
                }
            }
        }
    }
}
